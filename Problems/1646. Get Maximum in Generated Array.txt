-- Problem Name: "1646. Get Maximum in Generated Array" (https://leetcode.com/problems/get-maximum-in-generated-array/)
-- Difficulty: Easy
-- Language: C++
-- Problem statement (condensed):
Given a number "n", generate an array according to the following rules:
arr[0] = 0
arr[1] = 1
arr[2*i] = arr[i]
arr[2*i + 1] = arr[i] + arr[i+1]


-- Logic/Explanation: 
We simply reverse the formulas to find the values of every element with an index of over 2. (i.e, let i = i/2)
So:
arr[2*i] = arr[i] -> arr[i] (even) = arr[i/2]
arr[2*i + 1] = arr[i] + arr[i+1] -> arr[i + 1] (odd) = arr[i/2] + arr[i/2 + 1]

Then we keep a running maximum to return as we generate the array

Things to note: 

-- Time complexity: O(n)
-- Code:
class Solution {
public:
    int getMaximumGenerated(int n) {
        if (n == 0 || n == 1) 
            return n;
        
        vector<int> arr(n+1);
        arr[0] = 0;
        arr[1] = 1;
        int maxi = 1;
        
        for (int i = 2; i <= n; i++) {
            arr[i] = i % 2 == 0 ? arr[i >> 1] : arr[i >> 1] + arr[(i >> 1) + 1];
            maxi = max(maxi, arr[i]);
        }
        
        return maxi;
    }
};


-- Runtime: 0ms
-- Memory Usage: 6.2MB